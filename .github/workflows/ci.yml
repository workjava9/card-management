name: CI (Buildpacks)

on:
  push:
    branches: [ "**" ]
  pull_request:

permissions:
  contents: read
  packages: write   # нужно для push в GHCR
  id-token: write

jobs:
  build-test-image:
    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }} # ghcr.io/<owner>/<repo>
      JAVA_VERSION: '17'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      - name: Make Gradle executable
        run: chmod +x gradlew

      - name: Unit tests
        run: ./gradlew --no-daemon clean test

      # Собираем OCI‑image через Spring Boot Buildpacks (bootBuildImage).
      - name: Build image with Buildpacks
        run: |
          IMAGE_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          ./gradlew --no-daemon bootBuildImage -PimageName=${IMAGE_TAG}
        env:
          BP_JVM_VERSION: ${{ env.JAVA_VERSION }}

      # Логинимся в GHCR и пушим имидж
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        run: |
          IMAGE_TAG=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${IMAGE_TAG}

      # Доп. удобные теги (latest для default-branch)
      - name: Tag as 'latest' on default branch
        if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        run: |
          IMAGE_SHA=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          IMAGE_LATEST=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker tag ${IMAGE_SHA} ${IMAGE_LATEST}
          docker push ${IMAGE_LATEST}
